<project name="PeerSingleton" default="release" basedir=".">
    <!--
    - The parameters for the peer enhancement and generation.
    -->
    <property name="source_peer_class" value="java/classes/jace/examples/Singleton.class"/>
    <property name="dest_peer_class" value="java/enhanced/jace/examples/Singleton.class"/>
    <property name="native_library_name" value="peer_singleton"/>
    <property name="peer_gen_header_target" value="cpp/include"/>
    <property name="peer_gen_source_target" value="cpp/source"/>
    <property name="include_user_members" value="true"/>
    <property name="jar_release_name" value="peer_singleton.jar"/>

    <property name="os" value="windows"/>
    <property name="platform" value="i386"/>

    <target name="-jace.task">
        <property environment="env"/>
        <taskdef resource="jace/ant/task.properties">
            <classpath>
                <!-- use logback.xml from jace -->
                <pathelement location="${env.JACE_HOME}/lib"/>
                <fileset dir="${env.JACE_HOME}/lib" includes="**/*.jar"/>
            </classpath>
        </taskdef>
    </target>

    <target name="compile">
        <mkdir dir="java/classes"/>
        <javac srcdir="java/jace" destdir="java/classes" includeantruntime="false"/>
    </target>

    <target name="enhance" depends="-jace.task, compile" description="Runs PeerEnhancer against the peer Java class">
        <EnhanceJavaPeer inputFile="${source_peer_class}"
                         outputFile="${dest_peer_class}">
            <library name="${native_library_name}"/>
        </EnhanceJavaPeer>
    </target>

    <target name="peer_generate" depends="enhance"
            description="Runs PeerGenerator against the enhanced peer Java class to generate the necessary C++ Peer code">
        <GenerateCppPeer file="${dest_peer_class}"
                         outputHeaders="${peer_gen_header_target}"
                         outputSources="${peer_gen_source_target}"
                         userDefinedMembers="${include_user_members}"/>
    </target>

    <target name="proxy_generate" depends="peer_generate"
            description="Runs AutoProxy against the source code generated by PeerGenerator">
        <GenerateCppProxies inputHeaders="cpp/include" inputSources="cpp/source"
                            outputHeaders="cpp/include"
                            outputSources="cpp/source"
                            exportSymbols="true">
            <classpath>
                <pathelement location="${env.JAVA_HOME}/jre/lib/rt.jar"/>
                <pathelement path="java/classes"/>
            </classpath>
        </GenerateCppProxies>
    </target>

    <target name="release" depends="proxy_generate" description="Jars up the enhanced version of the Java code">
        <delete dir="java/temp_build"/>
        <mkdir dir="java/temp_build"/>

        <copy todir="java/temp_build" overwrite="yes">
            <fileset dir="java/classes"/>
        </copy>

        <copy todir="java/temp_build" overwrite="yes">
            <fileset dir="java/enhanced"/>
        </copy>

        <mkdir dir="java/release"/>

        <jar jarfile="java/release/${jar_release_name}">
            <fileset dir="java/temp_build"/>
        </jar>
    </target>

    <target name="clean">
        <delete file="cpp/source/jace/peer/jace/examples/Singleton_peer.cpp"/>
        <delete file="cpp/source/jace/peer/jace/examples/SingletonMappings.cpp"/>
        <delete dir="cpp/source/jace/proxy"/>
        <delete file="cpp/include/jace/peer/jace/examples/Singleton.h"/>
        <delete dir="cpp/include/jace/proxy"/>
        <delete dir="java/temp_build"/>
        <delete dir="java/classes"/>
        <delete dir="java/release"/>
    </target>

    <target name="test" description="Runs the peer example">
        <condition property="path-separator" value=";">
            <os family="windows"/>
        </condition>
        <condition property="path-separator" value=":">
            <not>
                <isset property="path-separator"/>
            </not>
        </condition>

        <property name="libpath" value="cpp/${os}/${platform}/debug${path-separator}../../${os}/${platform}/debug"/>

        <java fork="true" classname="jace.examples.Singleton">
            <classpath>
                <fileset dir="java/release">
                    <include name="${jar_release_name}"/>
                </fileset>
            </classpath>
            <sysproperty key="java.library.path" value="${libpath}"/>
            <arg value="Parameter Number 1"/>
            <arg value="Parameter Number 2"/>
            <arg value="Parameter Number 3"/>
        </java>
    </target>
</project>
