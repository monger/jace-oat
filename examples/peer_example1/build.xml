<project name="PeerExample1" default="peer_generate" basedir=".">
    <!--
    - The parameters for the peer enhancement and generation.
    -->
    <property name="source_peer_class" value="java/target/classes/org/jace/examples/PeerExample.class"/>
    <property name="dest_peer_class" value="java/target/classes/org/jace/examples/PeerExample.class"/>
    <property name="native_library_name" value="peer_example1"/>
    <property name="resource_release_method" value="close"/>
    <property name="peer_gen_header_target" value="cpp/target/ant/include"/>
    <property name="peer_gen_source_target" value="cpp/target/ant/source"/>
    <property name="include_user_members" value="true"/>
    <property name="jar_release_name" value="peer_example1.jar"/>

    <property name="os" value="windows"/>
    <property name="compiler" value="msvc"/>
    <property name="platform" value="i386"/>
    <property name="build.type" value="debug"/>

    <target name="-jace.task">
        <property name="JACE_HOME" value="../../core/java/target"/>
        <taskdef resource="org/jace/ant/task.properties">
            <classpath>
                <fileset dir="${JACE_HOME}" includes="**/*.jar"/>
            </classpath>
        </taskdef>
    </target>

    <target name="compile">
        <mkdir dir="java/target/classes"/>
        <javac srcdir="java/src/main/java" destdir="java/target/classes" includeantruntime="false"/>
    </target>

    <target name="enhance" depends="-jace.task, compile" description="Runs PeerEnhancer against the peer Java class">
        <EnhanceJavaPeer inputFile="${source_peer_class}"
                         outputFile="${dest_peer_class}"
                         deallocationmethod="${resource_release_method}">
            <library name="${native_library_name}"/>
        </EnhanceJavaPeer>
    </target>

    <target name="peer_generate" depends="enhance"
            description="Runs PeerGenerator against the enhanced peer Java class to generate the necessary C++ Peer code">
        <GenerateCppPeer file="${dest_peer_class}"
                         outputHeaders="${peer_gen_header_target}"
                         outputSources="${peer_gen_source_target}"
                         userDefinedMembers="${include_user_members}"/>
    </target>

    <target name="proxy_generate" depends="peer_generate"
            description="Runs AutoProxy against the source code generated by PeerGenerator">
        <property environment="env"/>
        <GenerateCppProxies inputHeaders="cpp/src/main/cpp/include" inputSources="cpp/src/main/cpp/source"
                            outputHeaders="cpp/target/ant/include"
                            outputSources="cpp/target/ant/source"
                            exportSymbols="true">
            <classpath>
                <pathelement location="${env.JAVA_HOME}/jre/lib/rt.jar"/>
                <pathelement path="java/target/classes"/>
            </classpath>
        </GenerateCppProxies>
    </target>

    <target name="clean">
        <delete dir="cpp/target"/>
        <delete dir="java/target"/>
    </target>
</project>
