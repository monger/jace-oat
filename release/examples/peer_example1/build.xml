
<project name="Jace.Java" default="release" basedir=".">

  <!--
    - The parameters for the peer enhancement and generation.
    -
    -->
  <property name="source_peer_class" value="java/classes/jace/examples/PeerExample.class"/>
  <property name="dest_peer_class" value="java/enhanced/jace/examples/PeerExample.class"/>
  <property name="native_library_name" value="peer_example1"/>
  <property name="resource_release_method" value="close"/>
  <property name="peer_gen_header_target" value="c++/include"/>
  <property name="peer_gen_source_target" value="c++/source"/>
  <property name="include_user_members" value="true"/>

  <property name="os" value="win32"/>
  <property name="compiler" value="vc++6.0"/>

  <target name="init">
    <tstamp/>
  </target>

  <target name="compile" depends="init">
    <mkdir dir="java/classes"/>
    <javac srcdir="java/jace" destdir="java/classes"/>
  </target>

  <target name="enhance" depends="compile" description="Runs PeerEnhancer against the PeerExample Java class">

    <java fork="true" classname="jace.peergen.PeerEnhancer">
      <arg path="${source_peer_class}"/>
      <arg path="${dest_peer_class}"/>
      <arg value="${native_library_name}"/>
      <arg value="${resource_release_method}"/>
      <classpath>
        <fileset dir="../../lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </java>

  </target>

  <target name="peer_generate" depends="enhance" 
    description="Runs PeerGenerator against the enhanced PeerExample Java class to generate the necessary C++ Peer code">

    <java classname="jace.peergen.PeerGenerator">
      <arg path="java/enhanced/jace/examples/PeerExample.class"/>
      <arg value="${native_library_name}"/>
      <arg path="${peer_gen_header_target}"/>
      <arg path="${peer_gen_source_target}"/>
      <arg value="${include_user_members}"/>
      <classpath>
        <fileset dir="../../lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </java>

  </target>

  <target name="proxy_generate" depends="peer_generate" 
          description="Runs AutoProxy against the source code generated by PeerGenerator">

    <delete dir="c++/proxies" quiet="true"/>

    <java fork="true" classname="jace.autoproxy.AutoProxy">
      <arg path="c++/include"/>
      <arg path="c++/source"/>
      <arg path="c++/proxies/include"/>
      <arg path="c++/proxies/source"/>
      <arg path="${java.home}/lib/rt.jar:java/classes"/>
      <classpath>
        <fileset dir="../../lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
      <arg value="-mindep"/>
    </java>

  </target>

  <target name="release" depends="proxy_generate" description="Jars up the enhanced version of the PeerExample">

    <delete dir="java/temp_build"/>
    <mkdir dir="java/temp_build"/>

    <copy todir="java/temp_build" overwrite="yes">
      <fileset dir="java/classes"/>
    </copy>

    <copy todir="java/temp_build" overwrite="yes">
      <fileset dir="java/enhanced"/>
    </copy>

    <mkdir dir="java/release"/>

    <jar jarfile="java/release/peer_example1.jar">
      <fileset dir="java/temp_build"/>
    </jar>
  </target>

  <target name="clean">
    <delete dir="java/temp_build"/>
    <delete dir="java/classes"/>
    <delete dir="java/release"/>
  </target>

  <target name="test" description="Runs the PeerExample">

    <condition property="path-separator" value=";">
      <os family="windows"/>
    </condition>
    <condition property="path-separator" value=":">
      <not>
        <isset property="path-separator"/>
      </not>
    </condition>

    <property name="libpath" value="c++/lib/${os}/${compiler}/debug${path-separator}../../lib/${os}/${compiler}"/>
    <echo message="${libpath}"/>

    <java fork="true" classname="jace.examples.PeerExample">
      <classpath>
        <fileset dir="java\release">
          <include name="peer_example1.jar"/>
        </fileset>
      </classpath>
      <sysproperty key="java.library.path" value="${libpath}"/>
      <arg value="www.google.com"/>
      <arg value="/index.html"/>
    </java>
  </target>

</project>

