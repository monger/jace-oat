BEGIN_NAMESPACE_2(org, jace)

/**
 * Contains the template specialization prototypes for the template class, JField.
 *
 * This file is only for internal use of the JACE library.
 */

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JBoolean > JField< ::org::jace::proxy::types::JBoolean >::get(jace::proxy::JObject& object);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JBoolean > JField< ::org::jace::proxy::types::JBoolean >::get(const JClass& jClass);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JByte > JField< ::org::jace::proxy::types::JByte >::get(jace::proxy::JObject& object);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JByte > JField< ::org::jace::proxy::types::JByte >::get(const JClass& jClass);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JChar > JField< ::org::jace::proxy::types::JChar >::get(jace::proxy::JObject& object);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JChar > JField< ::org::jace::proxy::types::JChar >::get(const JClass& jClass);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JShort > JField< ::org::jace::proxy::types::JShort >::get(jace::proxy::JObject& object);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JShort > JField< ::org::jace::proxy::types::JShort >::get(const JClass& jClass);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JInt > JField< ::org::jace::proxy::types::JInt >::get(jace::proxy::JObject& object);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JInt > JField< ::org::jace::proxy::types::JInt >::get(const JClass& jClass);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JLong > JField< ::org::jace::proxy::types::JLong >::get(jace::proxy::JObject& object);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JLong > JField< ::org::jace::proxy::types::JLong >::get(const JClass& jClass);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JFloat > JField< ::org::jace::proxy::types::JFloat >::get(jace::proxy::JObject& object);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JFloat > JField< ::org::jace::proxy::types::JFloat >::get(const JClass& jClass);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JDouble > JField< ::org::jace::proxy::types::JDouble >::get(jace::proxy::JObject& object);

template <>
JACE_API JFieldProxy< ::org::jace::proxy::types::JDouble > JField< ::org::jace::proxy::types::JDouble >::get(const JClass& jClass);

END_NAMESPACE_2(org, jace)

